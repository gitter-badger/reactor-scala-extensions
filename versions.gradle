if (!hasProperty('scalaVersion')) {
    ext.scalaVersion = '2.12.10'
}

def scalaVersionMatch = scalaVersion =~ /^(\d+\.\d+)\.\d+$/
if (scalaVersionMatch.find()) {
    ext.baseScalaVersion = scalaVersionMatch.group(1)
} else {
    ext.baseScalaVersion = scalaVersion
}

ext {
    logbackVersion      = "1.3.0-alpha5" //this is only used in testRuntimeOnly. DO NOT USE THIS IN NON TEST
    mockitoInlineVersion = "3.3.0"
    mockitoVersion      = "1.11.3"
    reactorVersion      = "3.3.5.RELEASE"
    scalaLoggingVersion = "3.9.2"
    scalatestVersion    = "3.1.1"
    scalaCollCompatVersion = "2.1.4"
}

ext.libraries = [
        scalaCollCompat     : "org.scala-lang.modules:scala-collection-compat_$baseScalaVersion:$scalaCollCompatVersion",
        logback             : "ch.qos.logback:logback-classic:$logbackVersion",
        micrometer          : "io.micrometer:micrometer-core:latest.release",
        mockitoInline       : "org.mockito:mockito-inline:$mockitoInlineVersion",
        mockitoScala        : "org.mockito:mockito-scala_$baseScalaVersion:$mockitoVersion",
        reactorCore         : "io.projectreactor:reactor-core:$reactorVersion",
        reactorTest         : "io.projectreactor:reactor-test:$reactorVersion",
        scalaLibrary        : "org.scala-lang:scala-library:$scalaVersion",
        scalaLogging        : "com.typesafe.scala-logging:scala-logging_$baseScalaVersion:$scalaLoggingVersion",
        scalatest           : "org.scalatest:scalatest_$baseScalaVersion:$scalatestVersion",
]
